#ifndef __FRC_CMD_H__
#define __FRC_CMD_H__

#define FRCORE_CMD_INPUT_MAX        (64)

typedef enum {
    CMD_TYPE_RESV,
    CMD_TYPE_TEST,
    CMD_TYPE_CTRL,
    CMD_TYPE_USER,
    CMD_TYPE_DRV,
    CMD_TYPE_MAX,
} frcore_cmd_type_e;

typedef enum {
    TEST_CMD_RESV,
    TEST_CMD_UDP_DMA,
    TEST_CMD_TCP_DMA,
    TEST_CMD_DMA_LOOP_START,
    TEST_CMD_DMA_LOOP_STOP,
    TEST_CMD_SIMPLE_PACKET_CHAN,
    TEST_CMD_MAX,
} frcore_test_cmd_e;

typedef enum {
    USER_CMD_RESV,
    USER_CMD_GET_BDD_STATUS,
    USER_CMD_GET_VERSION,
    USER_CMD_BDD_PORT_ENABLE,
    USER_CMD_CONFIG_LOG_SW,
    USER_CMD_GET_BDD_INFO,
    USER_CMD_GET_STAT,
    USER_CMD_CLEAR_STAT,
    USER_CMD_GET_PORT_STATUS,
    USER_CMD_GET_PORT_STAT,
    USER_CMD_CLEAR_PORT_STAT,
    USER_CMD_GET_TEMP,
    USER_CMD_GET_PHY,
    USER_CMD_SET_PHY,
    USER_CMD_SET_CPLD,
    USER_CMD_GET_CPLD,
    USER_CMD_PROT_ENABLE,
    USER_CMD_SET_LOOPBACK_MODE,
    USER_CMD_SET_WORK_MODE,
    USER_CMD_FORCE_LINK,
    USER_CMD_GET_SYSINFO,
    USER_CMD_SET_AGE_TIME,
    USER_CMD_POWEROFF,
    USER_CMD_SET_RETRANS_TIME,
    USER_CMD_SET_DISORDER_DEPTH,
    USER_CMD_GET_FR_STATUS,
    USER_CMD_FR_ENABLE,
    USER_CMD_SSN_GET_FIVETUPLE,
    USER_CMD_SSN_BUCKET_GET,
    USER_CMD_SSN_MATCH,
    USER_CMD_GET_RULE_STATUS,
    USER_CMD_RULE_ENABLE,
    USER_CMD_ADD_RULE,
    USER_CMD_CLEAN_ALL_RULE,
    USER_CMD_RULE_MATCH,
    USER_CMD_GET_RULE_CNT,
    USER_CMD_DEL_RULE,
    USER_CMD_GET_RULE,
    USER_CMD_CLEAN_RULE_STAT,
    USER_CMD_UPDATE_RULE,
    USER_CMD_GET_RULE_NUM,  /* RULE numbers */
    #if FRC_CONFIG_TWO_TUPLE
    USER_CMD_GET_ACL_STATUS,
    USER_CMD_ACL_ENABLE,
    USER_CMD_ADD_ACL,
    USER_CMD_CLEAN_ALL_ACL,
    USER_CMD_ACL_MATCH,
    USER_CMD_GET_ACL_CNT,
    USER_CMD_DEL_ACL,
    USER_CMD_GET_ACL,
    USER_CMD_CLEAN_ACL_STAT,
    USER_CMD_GET_ACL_NUM,  /* ACL numbers */
    USER_CMD_GET_ACL_HASH_TABLE,
    #endif
    USER_CMD_SET_DMA_BLOCK_SIZE,
    USER_CMD_READ_DMA,
    #if FRC_CONFIG_UDP
    USER_CMD_GET_UDP_STATUS,
    USER_CMD_UDP_ENABLE,
    #endif
    #if FRC_CONFIG_VLAN_CHECK
    USER_CMD_SET_VLAN_CHECK_PARAMETER,
    USER_CMD_GET_VLAN_CHECK_PARAMETER,
    USER_CMD_GET_VLAN_CHECK_STAT,
    USER_CMD_CLEAR_VLAN_CHECK_STAT,
    #endif
    #if FRC_CONFIG_VLAN_IV
    USER_CMD_VLAN_V4_HASH_MASK_SET,
    USER_CMD_VLAN_V6_HASH_MASK_SET,
    #endif
    #if FRC_CONFIG_TIMESTAMP_CHECK
    USER_CMD_GET_TIMESTAMP_CHECK_STAT,
    USER_CMD_CLEAR_TIMESTAMP_CHECK_STAT,
    #endif
    #if FRC_CONFIG_MAC_STATISTICS
    USER_CMD_MAC_STAT_ADD_MAC,
    USER_CMD_MAC_STAT_DEL_MAC,
    USER_CMD_MAC_STAT_DEL_ALL,
    USER_CMD_MAC_STAT_CLEAR_COUNTER,
    USER_CMD_MAC_STAT_CLEAR_ALL_COUNTER,
    USER_CMD_MAC_STAT_SHOW_COUNTER,
    USER_CMD_MAC_STAT_SHOW_ALL_COUNTER,
    USER_CMD_MAC_STAT_SET_HASH_MODE,
    USER_CMD_MAC_STAT_HEART_BEAT,
    USER_CMD_MAC_STAT_SET_IP,
    #endif
    #if FRC_CONFIG_IPC
    USER_CMD_IPC_CUR_GET,
    USER_CMD_IPC_CUR_SET,
    USER_CMD_IPC_MISC_GET,
    USER_CMD_IPC_MISC_SET,
    USER_CMD_IPC_EXP_GET,
    USER_CMD_IPC_EXP_SET,
    USER_CMD_IPC_INSTR_GET,
    USER_CMD_IPC_INSTR_SET,
    USER_CMD_IPC_INSTR_PAYLOAD_SET,
    #endif
    USER_CMD_MAX,
} frcore_user_cmd_e;

typedef enum {
   FEATURE_TCP_RESTORATION,
   FEATURE_TCP_SINGLE,
   FEATURE_OCT1_NETNIC,
   FEATURE_RULE_FILTRATE,
   REATURE_LOCK_XMIT,
} frc_feature_e;

typedef enum {
    DRV_CMD_RESV,
    DRV_CMD_GET_VERSION,
    DRV_CMD_GET_QUEUE_DESC,
    DRV_CMD_GET_TCP_QUEUE_INFO,
    DRV_CMD_GET_UDP_QUEUE_INFO,
    DRV_CMD_DMA_LOOP_BUFF_GET,
    DRV_CMD_GET_FEATURE,
    DRV_CMD_GET_POOL_AND_RING_ADDR,
    DRV_CMD_MAX
} frcdrv_cmd_e;

typedef struct {
#if __FRC_BYTE_ORDER == __FRC_LITTLE_ENDIAN
    uint64_t num:32;
    uint64_t len:32;
#else
    uint64_t len:32;
    uint64_t num:32;
#endif
} frc_pkt_dma_test_t;


typedef struct {
    uint64_t tx_addr[FRC_DAT_CORE_NUM];
    uint64_t rx_addr[FRC_DAT_CORE_NUM];
} frc_dma_loop_arg_t;

typedef struct {
    uint64_t core_num;
    uint64_t rx_addr;
    uint64_t tx_addr;
} frc_dma_loop_buff_addr_t;

typedef struct {
    uint32_t queue_num;
    uint32_t start_id;
} frc_dma_queue_info_t;

#endif /* !__FRC_CMD_H__ */
